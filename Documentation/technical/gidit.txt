git-gidit-daemon
=============

Overall operation
-----------------

. Connects to the gidit cloud and handles bundle send/receiving

. Learns what refs the cloud has and what is needed, pulls in 
  what is needed, and forwards off to the git client.

. Daemon runs, and participates in cloud operations while 
  waiting for actions from local git clients.


Git Daemon
----------

The DHT cloud stores two main types of objects, PushObjects, and
bundles. 

PushObjects are looked up through a PGP key, and ProjectName. The PGP
key allows for unique identification of an individuals. The
ProjectName identifies an individuals branch. This lookup should
return all PushObjects for a given PGP key and ProjectName in sorted
order (older PushObjects later).

Bundles are looked up through a Start SHA1 and an End SHA1.


Storage Layout
--------------

Default base dir is '/var/gidit'

PushObjects, since they are looked up through PGP and ProjectName,
would be stored in files stored in folders by their PGP keys.

The file structure would be:

./pushobjects/SHA1 of PGP Key/ProjectName/PushObjSHA1

The ProjectName folder would hold the PushObjects. There is a special file in
this folder called HEAD which would hold the most recent PushObject's SHA1.

Bundles would be stored similar to how git stores objects. A folder 
of the two char SHA1 prefix, followed by a folder consisting of the 
rest of the SHA1 hash. The bundle would be stored inside of the folder 
with the name of the end SHA1.

./bundles/[Start SHA1 0..2]/[Start SHA1 2..20]/[End SHA1]


PushObjects
-----------

A PushObject is simply a snapshot of a repository (including all
relevant refs) during a push. It holds a list of SHA1s for each
tag/branch being pushed.

An example of the contents of a saved PushObject:

	bf562635643c29adb3bae3057c0f01403994b17c HEAD
	616c9272a6b2125d224ffc9ecabdaf07f9afffa9 refs/heads/master
	bf562635643c29adb3bae3057c0f01403994b17c refs/heads/po_store
	616c9272a6b2125d224ffc9ecabdaf07f9afffa9 refs/heads/pushobj
	616c9272a6b2125d224ffc9ecabdaf07f9afffa9 refs/heads/working
	-----BEGIN PGP SIGNATURE-----
	Version: GnuPG v2.0.9 (GNU/Linux)

	iEYEABECAAYFAkmqOgoACgkQZRNrWo5KWPPMiACeOT7S2ptC1/XTIA063Uy6SLId
	DXoAoK3H8MDQHGB7uEgKsYZPimtzEpeI
	=WtY8
	-----END PGP SIGNATURE-----
	522a47cd385352ae03f2c3ef44eae561c1cf3af6 PREV

The line with PREV is all 0's if it is the first pushobject.

PushObjects, went sent over the wire, do not have the PREV either.


Client->Daemon PushObjects
--------------------------

PushObjects when sent off from client to daemon are in this form:
[size of pgpkey][pgpkey][projname]\n[pushobject]

The PushObject looks like the section between "BEGIN PUSH OBJECT" and
"BEGIN PGP SIGNATURE" from the PushObject example.

The [size of pgpkey] is 4 bytes ascii hex. The [pgpkey] is the binary
output of your pgpkey, equivalent to `gpg --export [id]`.
